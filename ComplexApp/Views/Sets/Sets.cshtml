@{
    ViewBag.Title = "Sets";
    ComplexApp.Models.Sets globalSet = (ComplexApp.Models.Sets)System.Web.HttpContext.Current.Session["Sets"];
}

    <div class="row">
        <div class="col-md-3">
            <h2><i class="material-icons" style="border-radius: 50%; padding: 10px; background-color: #ebebeb; font-size:40px;color: #000000; margin-right:0.2em">storage</i> Sets</h2>
        </div>
        <div class="col-md-9">
            <h3 class="row"> INFO</h3>
            <h5 class="row"> If the element you want to add is already in the set, it won't be added again.</h5>
        </div>
    </div>

<hr />

<div class="row">
    <div class="col-md-5 align-self-center">
        @using (Html.BeginForm("addNewElement", "Sets"))
        {
            <form class="form-inline">
                <div class="form-group">
                    <h3> Insert your element value</h3>
                    <label for="newElement" class="sr-only">Add an element</label>
                    <input type="text" class="form-control" name="newElement" id="newElement" placeholder="Add an element">
                </div>
                <button type="submit" style="padding: 1%" class="btn btn-primary"><i class="material-icons" style="font-size: 30px; color: #ffffff;">add_circle_outline</i></button>
            </form>
        }
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-6">
        <ul class="list-group">
            @foreach (var item in globalSet.Elements)
            {
                <li class="list-group-item">
                    <h4>@Html.DisplayFor(modelItem => item) <input type="button" class="btn btn-danger  btn-sm" style="float:right" value="Remove" onclick="location.href='@Url.Action("removeElement", "Sets", new { element = item, item })})'"</h4>
                     
                </li>
            }
        </ul>
    </div>
</div>

